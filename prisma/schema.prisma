// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
}

model Account {
   id                String  @id @default(cuid())
   userId            String
   type              String
   provider          String
   providerAccountId String
   refresh_token     String?
   access_token      String?
   expires_at        Int?
   token_type        String?
   scope             String?
   id_token          String?
   session_state     String?

   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

   @@unique([provider, providerAccountId])
   @@index([userId])
}

model Session {
   id           String   @id @default(cuid())
   sessionToken String   @unique
   userId       String
   expires      DateTime
   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

   @@index([userId])
}

model User {
   id        String    @id @default(cuid())
   name      String?
   email     String?   @unique
   password  String?
   createdAt DateTime  @default(now())
   updatedAt DateTime  @updatedAt
   accounts  Account[]
   sessions  Session[]
   trips     Trip[]
}

model VerificationToken {
   identifier String
   token      String   @unique
   expires    DateTime

   @@unique([identifier, token])
}

model Trip {
   id          String     @id @default(cuid())
   title       String
   description String?
   startDate   DateTime
   endDate     DateTime
   destination String
   status      String     @default("planned")
   userId      String
   createdAt   DateTime   @default(now())
   updatedAt   DateTime   @updatedAt
   user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
   activities  Activity[]

   @@index([userId])
}

model Activity {
   id          String   @id @default(cuid())
   title       String
   description String?
   date        DateTime
   location    String?
   tripId      String
   createdAt   DateTime @default(now())
   updatedAt   DateTime @updatedAt
   trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)

   @@index([tripId])
}

model Destination {
   id              String   @id @default(cuid())
   name            String
   country         String
   description     String
   imageUrl        String?
   attractions     String
   bestTimeToVisit String?
   averageCost     Float?
   popularityScore Float?
   createdAt       DateTime @default(now())
   updatedAt       DateTime @updatedAt
}
